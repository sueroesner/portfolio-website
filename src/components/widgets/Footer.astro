---
import Socials from '~/components/common/Socials.astro';
// import { SITE } from 'astrowind:config';
// import { getHomePermalink } from '~/utils/permalinks';
import ToggleTheme from '../common/ToggleTheme.astro';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface Links {
  title?: string;
  links: Array<Link>;
}

export interface Props {
  links: Array<Links>;
  secondaryLinks: Array<Link>;
  socialLinks: Array<Link>;
  footNote?: string;
  theme?: string;
}

const { socialLinks = [], theme = 'light', footNote = '' } = Astro.props;
---

<footer class:list={[{ dark: theme === 'dark' }, 'relative border-t border-gray-200 dark:border-slate-800 not-prose']}>
  <div class="dark:bg-dark absolute inset-0 pointer-events-none" aria-hidden="true"></div>
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6 dark:text-slate-300">
    <div class="grid grid-cols-12 gap-4 gap-y-6 sm:gap-8 py-8 md:py-12">
      <!-- <div class="col-span-12 xs:col-span-6 sm:col-span-4">
        <div class="flex h-full items-center">
          <a class="inline-block font-bold text-xl" href={getHomePermalink()}>{SITE?.name}</a>
        </div>

        <div class="text-sm text-muted flex gap-1">
          {
            secondaryLinks.map(({ text, href }, index) => (
              <>
                {index !== 0 ? ' Â· ' : ''}
                <a
                  class="text-muted hover:text-gray-700 dark:text-gray-400 hover:underline transition duration-150 ease-in-out"
                  href={href}
                  set:html={text}
                />
              </>
            ))
          }
        </div>
      </div> -->
      <div class="flex col-span-6 justify-start -ml-2.5">
        <ToggleTheme iconClass="w-6 h-6 md:w-5 md:h-5 md:inline-block" />
      </div>

      <div class="flex col-span-6 justify-end -mr-2.5">
        <Socials socialLinks={socialLinks} />
      </div>

      <!-- {
        links.map(({ title, links }) => (
          <div class="col-span-6 md:col-span-3 lg:col-span-2">
            <div class="dark:text-gray-300 font-medium mb-2">{title}</div>
            {links && Array.isArray(links) && links.length > 0 && (
              <ul class="text-sm">
                {links.map(({ text, href, ariaLabel }) => (
                  <li class="mb-2">
                    <a
                      class="text-muted hover:text-gray-700 hover:underline dark:text-gray-400 transition duration-150 ease-in-out"
                      href={href}
                      aria-label={ariaLabel}
                    >
                      <Fragment set:html={text} />
                    </a>
                  </li>
                ))}
              </ul>
            )}
          </div>
        ))
      } -->
      <div class="flex justify-center col-span-12 text-muted hover:text-gray-700 hover:underline dark:text-gray-400">
        {footNote}
      </div>
    </div>
  </div>
</footer>
